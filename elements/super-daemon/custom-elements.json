{
  "version": 1,
  "tags": [
    {
      "name": "super-daemon-row",
      "description": "Events:\n\n  * `super-daemon-row-selected` {`CustomEvent<this>`} - \n\n  * `super-daemon-close` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `mini` {`boolean`} - \n\n  * `title` {`string`} - \n\n  * `path` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `image` {`string`} - \n\n  * `text-character` {`string`} - \n\n  * `event-name` {`string`} - \n\n  * `more` {`boolean`} - \n\n  * `showDetails` {`boolean`} - \n\n  * `value` - \n\n  * `tags` {`any[]`} - \n\n  * `active` {`boolean`} - \n\nProperties:\n\n  * `mini` {`boolean`} - \n\n  * `title` {`string`} - \n\n  * `path` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `image` {`string`} - \n\n  * `textCharacter` {`string`} - \n\n  * `eventName` {`string`} - \n\n  * `more` {`boolean`} - \n\n  * `showDetails` {`boolean`} - \n\n  * `value` - \n\n  * `tags` {`any[]`} - \n\n  * `shadowRootOptions` - \n\n  * `active` {`boolean`} - ",
      "attributes": [
        {
          "name": "mini",
          "description": "`mini` {`boolean`} - \n\nProperty: mini",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "`title` {`string`} - \n\nProperty: title\n\nDefault: null"
        },
        {
          "name": "path",
          "description": "`path` {`string`} - \n\nProperty: path\n\nDefault: null"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: null"
        },
        {
          "name": "image",
          "description": "`image` {`string`} - \n\nProperty: image\n\nDefault: null"
        },
        {
          "name": "text-character",
          "description": "`text-character` {`string`} - \n\nProperty: textCharacter\n\nDefault: null"
        },
        {
          "name": "event-name",
          "description": "`event-name` {`string`} - \n\nProperty: eventName\n\nDefault: null"
        },
        {
          "name": "more",
          "description": "`more` {`boolean`} - \n\nProperty: more\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "showDetails",
          "description": "`showDetails` {`boolean`} - \n\nProperty: showDetails\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "`value` - \n\nProperty: value\n\nDefault: [object Object]"
        },
        {
          "name": "tags",
          "description": "`tags` {`any[]`} - \n\nProperty: tags\n\nDefault: "
        },
        {
          "name": "active",
          "description": "`active` {`boolean`} - \n\nProperty: active\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onsuper-daemon-row-selected",
          "description": "`super-daemon-row-selected` {`CustomEvent<this>`} - "
        },
        {
          "name": "onsuper-daemon-close",
          "description": "`super-daemon-close` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "super-daemon-ui",
      "description": "Events:\n\n  * `super-daemon-command-context-changed` {`CustomEvent<{ value: any; }>`} - \n\n  * `like-changed` {`CustomEvent<{ value: any; }>`} - \n\n  * `super-daemon-run-program` {`CustomEvent<boolean>`} - \n\n  * `filter` {`CustomEvent<boolean>`} - \n\n  * `filtered-changed` {`CustomEvent<{ value: any[]; }>`} - \n\nAttributes:\n\n  * `opened` {`boolean`} - \n\n  * `mini` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `program-search` {`string`} - \n\n  * `command-context` {`string`} - \n\n  * `program-name` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `question-tags` {`any[]`} - \n\n  * `items` {`never[]`} - These are the items to be filtered\n\n  * `like` {`string`} - Filter regular expression string\n\n  * `where` {`string`} - The filter-by field of your items array of objects\n\n  * `case-sensitive` {`boolean`} - Enable case sensitivity when filtering\n\n  * `filtered` {`any[]`} - Filtered items\n\n  * `multi-match` {`boolean`} - Enable multi match when filtering so that space separated words are matched\nas separate words as opposed to a single phrase\n\n  * `t` - \n\nProperties:\n\n  * `_defaultTextEmpty` {`string`} - \n\n  * `opened` {`boolean`} - \n\n  * `mini` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `programSearch` {`string`} - \n\n  * `commandContext` {`string`} - \n\n  * `programName` {`string`} - \n\n  * `shadowRootOptions` - \n\n  * `icon` {`string`} - \n\n  * `questionTags` {`any[]`} - \n\n  * `items` {`never[]`} - These are the items to be filtered\n\n  * `like` {`string`} - Filter regular expression string\n\n  * `where` {`string`} - The filter-by field of your items array of objects\n\n  * `caseSensitive` {`boolean`} - Enable case sensitivity when filtering\n\n  * `filtered` {`any[]`} - Filtered items\n\n  * `multiMatch` {`boolean`} - Enable multi match when filtering so that space separated words are matched\nas separate words as opposed to a single phrase\n\n  * `t` - ",
      "attributes": [
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - \n\nProperty: opened\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "mini",
          "description": "`mini` {`boolean`} - \n\nProperty: mini\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "loading",
          "description": "`loading` {`boolean`} - \n\nProperty: loading\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "program-search",
          "description": "`program-search` {`string`} - \n\nProperty: programSearch\n\nDefault: "
        },
        {
          "name": "command-context",
          "description": "`command-context` {`string`} - \n\nProperty: commandContext\n\nDefault: *"
        },
        {
          "name": "program-name",
          "description": "`program-name` {`string`} - \n\nProperty: programName\n\nDefault: null"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: hardware:keyboard-return"
        },
        {
          "name": "question-tags",
          "description": "`question-tags` {`any[]`} - \n\nProperty: questionTags\n\nDefault: [object Object],[object Object],[object Object],[object Object]"
        },
        {
          "name": "items",
          "description": "`items` {`never[]`} - These are the items to be filtered\n\nProperty: items\n\nDefault: "
        },
        {
          "name": "like",
          "description": "`like` {`string`} - Filter regular expression string\n\nProperty: like"
        },
        {
          "name": "where",
          "description": "`where` {`string`} - The filter-by field of your items array of objects\n\nProperty: where\n\nDefault: index"
        },
        {
          "name": "case-sensitive",
          "description": "`case-sensitive` {`boolean`} - Enable case sensitivity when filtering\n\nProperty: caseSensitive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "filtered",
          "description": "`filtered` {`any[]`} - Filtered items\n\nProperty: filtered\n\nDefault: "
        },
        {
          "name": "multi-match",
          "description": "`multi-match` {`boolean`} - Enable multi match when filtering so that space separated words are matched\nas separate words as opposed to a single phrase\n\nProperty: multiMatch\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t"
        },
        {
          "name": "onsuper-daemon-command-context-changed",
          "description": "`super-daemon-command-context-changed` {`CustomEvent<{ value: any; }>`} - "
        },
        {
          "name": "onlike-changed",
          "description": "`like-changed` {`CustomEvent<{ value: any; }>`} - "
        },
        {
          "name": "onsuper-daemon-run-program",
          "description": "`super-daemon-run-program` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onfilter",
          "description": "`filter` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onfiltered-changed",
          "description": "`filtered-changed` {`CustomEvent<{ value: any[]; }>`} - "
        }
      ]
    },
    {
      "name": "super-daemon",
      "description": "`super-daemon`\n``\n\nEvents:\n\n  * `click` {`MouseEvent`} - \n\nAttributes:\n\n  * `key1` {`string`} - \n\n  * `program` {`string`} - \n\n  * `activeNode` - \n\n  * `value` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `context` {`any[]`} - \n\n  * `opened` {`boolean`} - \n\n  * `items` {`any[]`} - \n\n  * `loading` {`boolean`} - \n\n  * `like` {`string`} - \n\n  * `mini` {`boolean`} - \n\n  * `programSearch` {`string`} - \n\n  * `allItems` {`any[]`} - \n\n  * `programResults` {`any[]`} - \n\n  * `programName` {`string`} - \n\n  * `commandContext` {`string`} - \n\n  * `key2` {`string`} - \n\nProperties:\n\n  * `key1` {`string`} - \n\n  * `program` {`string`} - \n\n  * `activeSelection` - \n\n  * `activeRange` - \n\n  * `activeNode` - \n\n  * `windowControllers` - \n\n  * `windowControllers2` - \n\n  * `value` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `context` {`any[]`} - \n\n  * `opened` {`boolean`} - \n\n  * `items` {`any[]`} - \n\n  * `loading` {`boolean`} - \n\n  * `like` {`string`} - \n\n  * `mini` {`boolean`} - \n\n  * `_programValues` - \n\n  * `programSearch` {`string`} - \n\n  * `allItems` {`any[]`} - \n\n  * `programResults` {`any[]`} - \n\n  * `programName` {`string`} - \n\n  * `commandContext` {`string`} - \n\n  * `key2` {`string`} - ",
      "attributes": [
        {
          "name": "key1",
          "description": "`key1` {`string`} - \n\nProperty: key1"
        },
        {
          "name": "program",
          "description": "`program` {`string`} - \n\nProperty: program"
        },
        {
          "name": "activeNode",
          "description": "`activeNode` - \n\nProperty: activeNode\n\nDefault: null"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: "
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: hardware:keyboard-return"
        },
        {
          "name": "context",
          "description": "`context` {`any[]`} - \n\nProperty: context\n\nDefault: "
        },
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - \n\nProperty: opened\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "`items` {`any[]`} - \n\nProperty: items\n\nDefault: "
        },
        {
          "name": "loading",
          "description": "`loading` {`boolean`} - \n\nProperty: loading\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "like",
          "description": "`like` {`string`} - \n\nProperty: like\n\nDefault: "
        },
        {
          "name": "mini",
          "description": "`mini` {`boolean`} - \n\nProperty: mini\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "programSearch",
          "description": "`programSearch` {`string`} - \n\nProperty: programSearch\n\nDefault: "
        },
        {
          "name": "allItems",
          "description": "`allItems` {`any[]`} - \n\nProperty: allItems\n\nDefault: "
        },
        {
          "name": "programResults",
          "description": "`programResults` {`any[]`} - \n\nProperty: programResults\n\nDefault: "
        },
        {
          "name": "programName",
          "description": "`programName` {`string`} - \n\nProperty: programName\n\nDefault: null"
        },
        {
          "name": "commandContext",
          "description": "`commandContext` {`string`} - \n\nProperty: commandContext\n\nDefault: *"
        },
        {
          "name": "key2",
          "description": "`key2` {`string`} - \n\nProperty: key2\n\nDefault: Shift"
        },
        {
          "name": "onclick",
          "description": "`click` {`MouseEvent`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}