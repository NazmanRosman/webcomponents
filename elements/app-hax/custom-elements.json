{
  "version": 1,
  "tags": [
    {
      "name": "app-hax",
      "description": "Events:\n\n  * `jwt-login-logout` {`CustomEvent<boolean>`} - \n\n  * `simple-modal-show` {`CustomEvent<{ title: string; elements: { content: HTMLElement; }; modal: boolean; styles: { \"--simple-modal-titlebar-background\": string; \"--simple-modal-titlebar-color\": string; \"--simple-modal-width\": string; ... 4 more ...; \"--simple-modal-titlebar-height\": string; }; }>`} - \n\n  * `app-hax-loaded` {`CustomEvent<boolean>`} - \n\nAttributes:\n\n  * `userName` {`string`} - \n\n  * `siteReady` {`boolean`} - \n\n  * `token` {`string`} - \n\n  * `userMenuOpen` {`boolean`} - \n\n  * `courses` {`any[]`} - \n\n  * `activeItem` - \n\n  * `phrases` - \n\n  * `isNewUser` {`boolean`} - \n\n  * `base-path` {`string`} - \n\n  * `searchTerm` {`string`} - \n\n  * `appMode` {`string`} - \n\n  * `soundIcon` {`string`} - \n\n  * `t` - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `userName` {`string`} - \n\n  * `siteReady` {`boolean`} - \n\n  * `token` {`string`} - \n\n  * `unlockComingSoon` {`boolean`} - \n\n  * `windowControllers` - \n\n  * `__tour` - \n\n  * `userMenuOpen` {`boolean`} - \n\n  * `courses` {`any[]`} - \n\n  * `activeItem` - \n\n  * `phrases` - \n\n  * `isNewUser` {`boolean`} - \n\n  * `basePath` {`string`} - \n\n  * `searchTerm` {`string`} - \n\n  * `appMode` {`string`} - \n\n  * `soundIcon` {`string`} - \n\n  * `store` - \n\n  * `sound` - \n\n  * `t` - \n\n  * `tourName` {`string`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "userName",
          "description": "`userName` {`string`} - \n\nProperty: userName"
        },
        {
          "name": "siteReady",
          "description": "`siteReady` {`boolean`} - \n\nProperty: siteReady",
          "valueSet": "v"
        },
        {
          "name": "token",
          "description": "`token` {`string`} - \n\nProperty: token"
        },
        {
          "name": "userMenuOpen",
          "description": "`userMenuOpen` {`boolean`} - \n\nProperty: userMenuOpen\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "courses",
          "description": "`courses` {`any[]`} - \n\nProperty: courses\n\nDefault: "
        },
        {
          "name": "activeItem",
          "description": "`activeItem` - \n\nProperty: activeItem\n\nDefault: [object Object]"
        },
        {
          "name": "phrases",
          "description": "`phrases` - \n\nProperty: phrases\n\nDefault: [object Object]"
        },
        {
          "name": "isNewUser",
          "description": "`isNewUser` {`boolean`} - \n\nProperty: isNewUser\n\nDefault: null",
          "valueSet": "v"
        },
        {
          "name": "base-path",
          "description": "`base-path` {`string`} - \n\nProperty: basePath\n\nDefault: /"
        },
        {
          "name": "searchTerm",
          "description": "`searchTerm` {`string`} - \n\nProperty: searchTerm\n\nDefault: "
        },
        {
          "name": "appMode",
          "description": "`appMode` {`string`} - \n\nProperty: appMode\n\nDefault: "
        },
        {
          "name": "soundIcon",
          "description": "`soundIcon` {`string`} - \n\nProperty: soundIcon\n\nDefault: "
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onjwt-login-logout",
          "description": "`jwt-login-logout` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onsimple-modal-show",
          "description": "`simple-modal-show` {`CustomEvent<{ title: string; elements: { content: HTMLElement; }; modal: boolean; styles: { \"--simple-modal-titlebar-background\": string; \"--simple-modal-titlebar-color\": string; \"--simple-modal-width\": string; ... 4 more ...; \"--simple-modal-titlebar-height\": string; }; }>`} - "
        },
        {
          "name": "onapp-hax-loaded",
          "description": "`app-hax-loaded` {`CustomEvent<boolean>`} - "
        }
      ]
    },
    {
      "name": "random-word",
      "description": "Events:\n\n  * `word-changed` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `key` {`string`} - \n\n  * `phrases` - \n\n  * `word` {`string`} - \n\nProperties:\n\n  * `key` {`string`} - \n\n  * `phrases` - \n\n  * `word` {`string`} - ",
      "attributes": [
        {
          "name": "key",
          "description": "`key` {`string`} - \n\nProperty: key\n\nDefault: null"
        },
        {
          "name": "phrases",
          "description": "`phrases` - \n\nProperty: phrases\n\nDefault: [object Object]"
        },
        {
          "name": "word",
          "description": "`word` {`string`} - \n\nProperty: word\n\nDefault: null"
        },
        {
          "name": "onword-changed",
          "description": "`word-changed` {`CustomEvent<any>`} - "
        }
      ]
    },
    {
      "name": "rpg-character-toast",
      "description": "Events:\n\n  * `opened-changed` {`CustomEvent<{ value: any; }>`} - \n\nAttributes:\n\n  * `dark-mode` {`boolean`} - \n\n  * `awaiting-merlin-input` {`boolean`} - \n\n  * `merlin` {`boolean`} - \n\n  * `class-style` {`string`} - Class name, fit-bottom being a useful one\n\n  * `future` {`boolean`} - \n\n  * `event-callback` {`string`} - Event callback when hide is called\n\n  * `fire` {`boolean`} - \n\n  * `hat` {`string`} - \n\n  * `walking` {`boolean`} - \n\n  * `text` {`string`} - Plain text based message to display\n\n  * `alwaysvisible` {`boolean`} - \n\n  * `duration` {`number`} - How long the toast message should be displayed\n\n  * `opened` {`boolean`} - Opened state of the toast, use event to change\n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `darkMode` {`boolean`} - \n\n  * `awaitingMerlinInput` {`boolean`} - \n\n  * `windowControllers` - \n\n  * `merlin` {`boolean`} - \n\n  * `classStyle` {`string`} - Class name, fit-bottom being a useful one\n\n  * `future` {`boolean`} - \n\n  * `eventCallback` {`string`} - Event callback when hide is called\n\n  * `fire` {`boolean`} - \n\n  * `hat` {`string`} - \n\n  * `walking` {`boolean`} - \n\n  * `text` {`string`} - Plain text based message to display\n\n  * `alwaysvisible` {`boolean`} - \n\n  * `duration` {`number`} - How long the toast message should be displayed\n\n  * `opened` {`boolean`} - Opened state of the toast, use event to change\n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "dark-mode",
          "description": "`dark-mode` {`boolean`} - \n\nProperty: darkMode",
          "valueSet": "v"
        },
        {
          "name": "awaiting-merlin-input",
          "description": "`awaiting-merlin-input` {`boolean`} - \n\nProperty: awaitingMerlinInput\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "merlin",
          "description": "`merlin` {`boolean`} - \n\nProperty: merlin\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "class-style",
          "description": "`class-style` {`string`} - Class name, fit-bottom being a useful one\n\nProperty: classStyle\n\nDefault: "
        },
        {
          "name": "future",
          "description": "`future` {`boolean`} - \n\nProperty: future\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "event-callback",
          "description": "`event-callback` {`string`} - Event callback when hide is called\n\nProperty: eventCallback\n\nDefault: null"
        },
        {
          "name": "fire",
          "description": "`fire` {`boolean`} - \n\nProperty: fire\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hat",
          "description": "`hat` {`string`} - \n\nProperty: hat\n\nDefault: coffee"
        },
        {
          "name": "walking",
          "description": "`walking` {`boolean`} - \n\nProperty: walking\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "text",
          "description": "`text` {`string`} - Plain text based message to display\n\nProperty: text\n\nDefault: Saved"
        },
        {
          "name": "alwaysvisible",
          "description": "`alwaysvisible` {`boolean`} - \n\nProperty: alwaysvisible\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "duration",
          "description": "`duration` {`number`} - How long the toast message should be displayed\n\nProperty: duration\n\nDefault: 3000"
        },
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - Opened state of the toast, use event to change\n\nProperty: opened\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onopened-changed",
          "description": "`opened-changed` {`CustomEvent<{ value: any; }>`} - "
        }
      ]
    },
    {
      "name": "app-hax-backend-api",
      "description": "Events:\n\n  * `jwt-login-logout` {`CustomEvent<boolean>`} - \n\n  * `jwt-login-refresh-token` {`CustomEvent<{ element: { obj: this; callback: string; params: any[]; }; }>`} - \n\nAttributes:\n\n  * `token` {`string`} - \n\n  * `jwt` {`string`} - \n\n  * `method` {`string`} - \n\n  * `base-path` {`string`} - \n\n  * `appSettings` - \n\nProperties:\n\n  * `token` {`string`} - \n\n  * `jwt` {`string`} - \n\n  * `method` {`string`} - \n\n  * `basePath` {`string`} - \n\n  * `lastResponse` - \n\n  * `appSettings` - ",
      "attributes": [
        {
          "name": "token",
          "description": "`token` {`string`} - \n\nProperty: token"
        },
        {
          "name": "jwt",
          "description": "`jwt` {`string`} - \n\nProperty: jwt"
        },
        {
          "name": "method",
          "description": "`method` {`string`} - \n\nProperty: method"
        },
        {
          "name": "base-path",
          "description": "`base-path` {`string`} - \n\nProperty: basePath\n\nDefault: /"
        },
        {
          "name": "appSettings",
          "description": "`appSettings` - \n\nProperty: appSettings\n\nDefault: [object Object]"
        },
        {
          "name": "onjwt-login-logout",
          "description": "`jwt-login-logout` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onjwt-login-refresh-token",
          "description": "`jwt-login-refresh-token` {`CustomEvent<{ element: { obj: this; callback: string; params: any[]; }; }>`} - "
        }
      ]
    },
    {
      "name": "app-hax-router",
      "description": "`app-hax-router`\n\nProperties:\n\n  * `windowControllers` - \n\n  * `router` - ",
      "attributes": []
    },
    {
      "name": "app-hax-button",
      "description": "Attributes:\n\n  * `icon` {`string`} - \n\n  * `type` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `elevation` {`number`} - \n\n  * `active` {`boolean`} - \n\n  * `coming-soon` {`boolean`} - \n\n  * `prompt` {`string`} - \n\n  * `callback` {`string`} - \n\n  * `param` {`string`} - \n\n  * `beta` {`boolean`} - \n\nProperties:\n\n  * `icon` {`string`} - \n\n  * `type` {`string`} - \n\n  * `value` - \n\n  * `disabled` {`boolean`} - \n\n  * `elevation` {`number`} - \n\n  * `active` {`boolean`} - \n\n  * `comingSoon` {`boolean`} - \n\n  * `prompt` {`string`} - \n\n  * `callback` {`string`} - \n\n  * `param` {`string`} - \n\n  * `beta` {`boolean`} - ",
      "attributes": [
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: save"
        },
        {
          "name": "type",
          "description": "`type` {`string`} - \n\nProperty: type\n\nDefault: null"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "elevation",
          "description": "`elevation` {`number`} - \n\nProperty: elevation\n\nDefault: 2"
        },
        {
          "name": "active",
          "description": "`active` {`boolean`} - \n\nProperty: active\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "coming-soon",
          "description": "`coming-soon` {`boolean`} - \n\nProperty: comingSoon\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "prompt",
          "description": "`prompt` {`string`} - \n\nProperty: prompt\n\nDefault: null"
        },
        {
          "name": "callback",
          "description": "`callback` {`string`} - \n\nProperty: callback\n\nDefault: null"
        },
        {
          "name": "param",
          "description": "`param` {`string`} - \n\nProperty: param\n\nDefault: null"
        },
        {
          "name": "beta",
          "description": "`beta` {`boolean`} - \n\nProperty: beta\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "app-hax-hat-progress",
      "description": "Events:\n\n  * `progress-ready` {`CustomEvent<boolean>`} - \n\n  * `promise-progress-finished` {`CustomEvent<boolean>`} - \n\nAttributes:\n\n  * `promises` {`any[]`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `promises` {`any[]`} - \n\n  * `max` {`number`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "promises",
          "description": "`promises` {`any[]`} - \n\nProperty: promises\n\nDefault: "
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onprogress-ready",
          "description": "`progress-ready` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onpromise-progress-finished",
          "description": "`promise-progress-finished` {`CustomEvent<boolean>`} - "
        }
      ]
    },
    {
      "name": "app-hax-label",
      "description": "Attributes:\n\n  * `title` {`string`} - \n\n  * `subtitle` {`string`} - \n\nProperties:\n\n  * `title` {`string`} - \n\n  * `subtitle` {`string`} - ",
      "attributes": [
        {
          "name": "title",
          "description": "`title` {`string`} - \n\nProperty: title\n\nDefault: Welcome"
        },
        {
          "name": "subtitle",
          "description": "`subtitle` {`string`} - \n\nProperty: subtitle\n\nDefault: Start your journey now!"
        }
      ]
    },
    {
      "name": "app-hax-search-bar",
      "description": "Attributes:\n\n  * `searchTerm` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `show-search` {`boolean`} - \n\nProperties:\n\n  * `searchTerm` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `showSearch` {`boolean`} - ",
      "attributes": [
        {
          "name": "searchTerm",
          "description": "`searchTerm` {`string`} - \n\nProperty: searchTerm\n\nDefault: "
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "show-search",
          "description": "`show-search` {`boolean`} - \n\nProperty: showSearch\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "app-hax-search-results",
      "description": "Attributes:\n\n  * `searchItems` {`any[]`} - \n\n  * `displayItems` {`any[]`} - \n\n  * `searchTerm` {`string`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `searchItems` {`any[]`} - \n\n  * `displayItems` {`any[]`} - \n\n  * `searchTerm` {`string`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "searchItems",
          "description": "`searchItems` {`any[]`} - \n\nProperty: searchItems\n\nDefault: "
        },
        {
          "name": "displayItems",
          "description": "`displayItems` {`any[]`} - \n\nProperty: displayItems\n\nDefault: "
        },
        {
          "name": "searchTerm",
          "description": "`searchTerm` {`string`} - \n\nProperty: searchTerm\n\nDefault: "
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "app-hax-site-bar",
      "description": "Attributes:\n\n  * `icon` {`string`} - \n\n  * `opened` {`boolean`} - \n\n  * `inprogress` {`boolean`} - \n\n  * `icon-link` {`string`} - \n\n  * `textInfo` - \n\n  * `site-id` {`string`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `icon` {`string`} - \n\n  * `opened` {`boolean`} - \n\n  * `inprogress` {`boolean`} - \n\n  * `iconLink` {`string`} - \n\n  * `textInfo` - \n\n  * `siteId` {`string`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: link"
        },
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - \n\nProperty: opened\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "inprogress",
          "description": "`inprogress` {`boolean`} - \n\nProperty: inprogress\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "icon-link",
          "description": "`icon-link` {`string`} - \n\nProperty: iconLink\n\nDefault: /"
        },
        {
          "name": "textInfo",
          "description": "`textInfo` - \n\nProperty: textInfo\n\nDefault: [object Object]"
        },
        {
          "name": "site-id",
          "description": "`site-id` {`string`} - \n\nProperty: siteId\n\nDefault: "
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "app-hax-site-button",
      "description": "Attributes:\n\n  * `label` {`string`} - \n\n  * `value` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `elevation` {`number`} - \n\n  * `active` {`boolean`} - \n\n  * `coming-soon` {`boolean`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `label` {`string`} - \n\n  * `value` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `elevation` {`number`} - \n\n  * `active` {`boolean`} - \n\n  * `comingSoon` {`boolean`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label\n\nDefault: null"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: null"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "elevation",
          "description": "`elevation` {`number`} - \n\nProperty: elevation\n\nDefault: 3"
        },
        {
          "name": "active",
          "description": "`active` {`boolean`} - \n\nProperty: active\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "coming-soon",
          "description": "`coming-soon` {`boolean`} - \n\nProperty: comingSoon\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "app-hax-site-details",
      "description": "Events:\n\n  * `simple-modal-show` {`CustomEvent<{ title: string; elements: { content: HTMLDivElement; buttons: HTMLDivElement; }; invokedBy: any; styles: { \"--simple-modal-titlebar-background\": string; ... 6 more ...; \"--simple-modal-titlebar-height\": string; }; }>`} - \n\n  * `simple-modal-hide` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `details` - \n\n  * `site-id` {`string`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `need` {`string`} - \n\n  * `details` - \n\n  * `siteId` {`string`} - \n\n  * `detailOps` {`{}[]`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "details",
          "description": "`details` - \n\nProperty: details\n\nDefault: [object Object]"
        },
        {
          "name": "site-id",
          "description": "`site-id` {`string`} - \n\nProperty: siteId\n\nDefault: "
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onsimple-modal-show",
          "description": "`simple-modal-show` {`CustomEvent<{ title: string; elements: { content: HTMLDivElement; buttons: HTMLDivElement; }; invokedBy: any; styles: { \"--simple-modal-titlebar-background\": string; ... 6 more ...; \"--simple-modal-titlebar-height\": string; }; }>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<any>`} - "
        }
      ]
    },
    {
      "name": "app-hax-site-login",
      "description": "Events:\n\n  * `jwt-login-login` {`CustomEvent<{ username: string; password: any; }>`} - \n\n  * `simple-modal-hide` {`CustomEvent<{}>`} - \n\nAttributes:\n\n  * `username` {`string`} - \n\n  * `password` {`string`} - \n\n  * `errorMSG` {`string`} - \n\n  * `hidePassword` {`boolean`} - \n\n  * `hasPass` {`boolean`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `windowControllers` - \n\n  * `username` {`string`} - \n\n  * `password` {`string`} - \n\n  * `errorMSG` {`string`} - \n\n  * `hidePassword` {`boolean`} - \n\n  * `hasPass` {`boolean`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "username",
          "description": "`username` {`string`} - \n\nProperty: username\n\nDefault: "
        },
        {
          "name": "password",
          "description": "`password` {`string`} - \n\nProperty: password\n\nDefault: "
        },
        {
          "name": "errorMSG",
          "description": "`errorMSG` {`string`} - \n\nProperty: errorMSG\n\nDefault: Enter User name"
        },
        {
          "name": "hidePassword",
          "description": "`hidePassword` {`boolean`} - \n\nProperty: hidePassword\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "hasPass",
          "description": "`hasPass` {`boolean`} - \n\nProperty: hasPass\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onjwt-login-login",
          "description": "`jwt-login-login` {`CustomEvent<{ username: string; password: any; }>`} - "
        },
        {
          "name": "onsimple-modal-hide",
          "description": "`simple-modal-hide` {`CustomEvent<{}>`} - "
        }
      ]
    },
    {
      "name": "app-hax-steps",
      "description": "Attributes:\n\n  * `unlock-coming-soon` {`boolean`} - \n\n  * `nameTyped` {`string`} - \n\n  * `stepRoutes` {`any[]`} - \n\n  * `step` {`number`} - \n\n  * `loaded` {`boolean`} - \n\n  * `themeNames` {`any[]`} - \n\n  * `appSettings` - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `unlockComingSoon` {`boolean`} - \n\n  * `windowControllers` - \n\n  * `nameTyped` {`string`} - \n\n  * `stepRoutes` {`any[]`} - \n\n  * `_progressReady` {`boolean`} - \n\n  * `step` {`number`} - \n\n  * `loaded` {`boolean`} - \n\n  * `themeNames` {`any[]`} - \n\n  * `appSettings` - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "unlock-coming-soon",
          "description": "`unlock-coming-soon` {`boolean`} - \n\nProperty: unlockComingSoon\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "nameTyped",
          "description": "`nameTyped` {`string`} - \n\nProperty: nameTyped\n\nDefault: "
        },
        {
          "name": "stepRoutes",
          "description": "`stepRoutes` {`any[]`} - \n\nProperty: stepRoutes\n\nDefault: "
        },
        {
          "name": "step",
          "description": "`step` {`number`} - \n\nProperty: step\n\nDefault: null"
        },
        {
          "name": "loaded",
          "description": "`loaded` {`boolean`} - \n\nProperty: loaded\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "themeNames",
          "description": "`themeNames` {`any[]`} - \n\nProperty: themeNames\n\nDefault: "
        },
        {
          "name": "appSettings",
          "description": "`appSettings` - \n\nProperty: appSettings\n\nDefault: [object Object]"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "app-hax-toast",
      "description": "Events:\n\n  * `opened-changed` {`CustomEvent<{ value: any; }>`} - \n\nAttributes:\n\n  * `dark-mode` {`boolean`} - \n\n  * `awaiting-merlin-input` {`boolean`} - \n\n  * `merlin` {`boolean`} - \n\n  * `class-style` {`string`} - Class name, fit-bottom being a useful one\n\n  * `future` {`boolean`} - \n\n  * `event-callback` {`string`} - Event callback when hide is called\n\n  * `fire` {`boolean`} - \n\n  * `hat` {`string`} - \n\n  * `walking` {`boolean`} - \n\n  * `text` {`string`} - Plain text based message to display\n\n  * `alwaysvisible` {`boolean`} - \n\n  * `duration` {`number`} - How long the toast message should be displayed\n\n  * `opened` {`boolean`} - Opened state of the toast, use event to change\n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `darkMode` {`boolean`} - \n\n  * `awaitingMerlinInput` {`boolean`} - \n\n  * `windowControllers` - \n\n  * `merlin` {`boolean`} - \n\n  * `classStyle` {`string`} - Class name, fit-bottom being a useful one\n\n  * `future` {`boolean`} - \n\n  * `eventCallback` {`string`} - Event callback when hide is called\n\n  * `fire` {`boolean`} - \n\n  * `hat` {`string`} - \n\n  * `walking` {`boolean`} - \n\n  * `text` {`string`} - Plain text based message to display\n\n  * `alwaysvisible` {`boolean`} - \n\n  * `duration` {`number`} - How long the toast message should be displayed\n\n  * `opened` {`boolean`} - Opened state of the toast, use event to change\n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "dark-mode",
          "description": "`dark-mode` {`boolean`} - \n\nProperty: darkMode",
          "valueSet": "v"
        },
        {
          "name": "awaiting-merlin-input",
          "description": "`awaiting-merlin-input` {`boolean`} - \n\nProperty: awaitingMerlinInput\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "merlin",
          "description": "`merlin` {`boolean`} - \n\nProperty: merlin\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "class-style",
          "description": "`class-style` {`string`} - Class name, fit-bottom being a useful one\n\nProperty: classStyle\n\nDefault: "
        },
        {
          "name": "future",
          "description": "`future` {`boolean`} - \n\nProperty: future\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "event-callback",
          "description": "`event-callback` {`string`} - Event callback when hide is called\n\nProperty: eventCallback\n\nDefault: null"
        },
        {
          "name": "fire",
          "description": "`fire` {`boolean`} - \n\nProperty: fire\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hat",
          "description": "`hat` {`string`} - \n\nProperty: hat\n\nDefault: coffee"
        },
        {
          "name": "walking",
          "description": "`walking` {`boolean`} - \n\nProperty: walking\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "text",
          "description": "`text` {`string`} - Plain text based message to display\n\nProperty: text\n\nDefault: Saved"
        },
        {
          "name": "alwaysvisible",
          "description": "`alwaysvisible` {`boolean`} - \n\nProperty: alwaysvisible\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "duration",
          "description": "`duration` {`number`} - How long the toast message should be displayed\n\nProperty: duration\n\nDefault: 3000"
        },
        {
          "name": "opened",
          "description": "`opened` {`boolean`} - Opened state of the toast, use event to change\n\nProperty: opened\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onopened-changed",
          "description": "`opened-changed` {`CustomEvent<{ value: any; }>`} - "
        }
      ]
    },
    {
      "name": "app-hax-top-bar",
      "description": "Attributes:\n\n  * `edit-mode` {`boolean`} - \n\nProperties:\n\n  * `editMode` {`boolean`} - ",
      "attributes": [
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - \n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "app-hax-user-menu-button",
      "description": "Attributes:\n\n  * `icon` {`string`} - \n\n  * `label` {`string`} - \n\nProperties:\n\n  * `icon` {`string`} - \n\n  * `label` {`string`} - ",
      "attributes": [
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: account-circle"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label\n\nDefault: Default"
        }
      ]
    },
    {
      "name": "app-hax-user-menu",
      "description": "Attributes:\n\n  * `is-open` {`boolean`} - \n\n  * `icon` {`string`} - \n\nProperties:\n\n  * `isOpen` {`boolean`} - \n\n  * `icon` {`string`} - ",
      "attributes": [
        {
          "name": "is-open",
          "description": "`is-open` {`boolean`} - \n\nProperty: isOpen\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: account-circle"
        }
      ]
    },
    {
      "name": "app-hax-wired-toggle",
      "description": "Attributes:\n\n  * `label` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\nProperties:\n\n  * `tourName` {`string`} - \n\n  * `label` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `input` - \n\n  * `knob` - \n\n  * `onChange` - \n\n  * `refreshKnob` - \n\n  * `svg` {`SVGSVGElement | undefined`} - \n\n  * `lastSize` {`Point`} - \n\n  * `seed` {`number`} - ",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label\n\nDefault: Dark mode"
        },
        {
          "name": "checked",
          "description": "`checked` {`boolean`} - \n\nProperty: checked\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "wired-darkmode-toggle",
      "description": "Attributes:\n\n  * `label` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\nProperties:\n\n  * `label` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `input` - \n\n  * `knob` - \n\n  * `onChange` - \n\n  * `refreshKnob` - \n\n  * `svg` {`SVGSVGElement | undefined`} - \n\n  * `lastSize` {`Point`} - \n\n  * `seed` {`number`} - ",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label\n\nDefault: Dark mode"
        },
        {
          "name": "checked",
          "description": "`checked` {`boolean`} - \n\nProperty: checked\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}